c
@review
@movie
@user
continue
@review
@movie
@user
continue
@user
@movie
continue
@user.new
@review
@movie
@user
c
@review
@movie
@user
continue
@review
@category
@movie
@user
continue
@movie
@user
continue
@review.new
@review
@movie
@user
continue
@category
@movie
@user
@review
continue
@user
continue
@user.name
user
@user
continue
@user
continue
@user.new
@user
continue
@user.name
@user.new
@user
@user.save
@user
continue
@user.update(name: "Ankit")
@user.update
@user.update(name: "Ankit")
@user.update(name: "Ankit
@user.name="Ankit"
@user.name="Ankit:
@user.update(name: "Ankit")
@user.update
continue
@user.update
@user.name="Ankit"
@user.new
@user
c
@user.update
@user.save
@user.name="Ankit"
@user.new
@user
@user.update
@user
c
@user.save
@user
@user.password= "password"
@user.new
@user
continue
c
@user.save
@user
@user.password="password"
@user.new
@user
c
@user.save
@user
@user.password = "password"
@user.new
@user
continue
movie
user
c
movie
n
user
FactoryBot.create!(:movie)
FactoryBot.create!(movie)
continue
movie
user
c
it { should validate_uniqueness_of(:user_id).scoped_to(:movie_id) }
 should validate_uniqueness_of(:user_id).scoped_to(:movie_id) 
it { should validate_uniqueness_of(:user_id).scoped_to(:movie_id) }
continue
c
User.find(decoded[:user_id])
header
decoded
n
header
n
header
n
params
